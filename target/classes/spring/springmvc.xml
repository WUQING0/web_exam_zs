<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--	&lt;!&ndash;静态资源解析包括 ：js、css、img、.. &ndash;&gt;-->
<!--	<mvc:resources mapping="/js/" location="/js/**" />-->
<!--	<mvc:resources mapping="/data/" location="/data/**" />-->
<!--	<mvc:resources mapping="/dist/" location="/dist/css**" />-->
<!--	<mvc:resources mapping="/dist/" location="/dist/js**" />-->
<!--	<mvc:resources mapping="/less/" location="/less/**"/>-->
<!--	<mvc:resources mapping="/vendor/" location="/vendor**"/>-->
<!--	&lt;!&ndash;加载静态资源 &ndash;&gt;-->
	<mvc:default-servlet-handler />

	<!--<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<开启注解方式：配置>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->

	<!--使用annotation-driven 注解驱动，就可以代替 注解映射器 和 注解适配器 的配置 -->
	<!--conversion-service 向处理器适配器中注入【自定义的参数绑定组件】。 -->
	<!--validator 向处理器适配器，注入 校验器 -->
	<mvc:annotation-driven >
	</mvc:annotation-driven>

<!--	&lt;!&ndash;自定义参数绑定组件 &ndash;&gt;-->
<!--	<bean id="conversionService"-->
<!--		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
<!--		&lt;!&ndash; 转换器 &ndash;&gt;-->
<!--		<property name="converters">-->
<!--			<set>-->
<!--				&lt;!&ndash; 日期类型转换 &ndash;&gt;-->
<!--				<bean class="com.system.controller.converter.CustomDateConverter" />-->
<!--			</set>-->
<!--		</property>-->
<!--	</bean>-->

	<!--组件扫描，可以扫描 controller、Service、... 并注册添加到 spring 容器中 这里扫描 controller，指定controller的包 -->
	<context:component-scan base-package="com.system.controller" />

	<!--全局错误信息处理器 只要实现HandlerExceptionResolver接口就是全局异常处理器 -->
<!--	<bean class="com.system.exception.CustomExceptionResolver" />-->

	<!--视图解析器 -->
	<!-- 需要配置解析jsp的视图解析器 jsp解析，默认使用jstl标签解析 -->


<!--	全局异常处理-->
</beans>