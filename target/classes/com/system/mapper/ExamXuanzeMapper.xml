<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.mapper.ExamXuanzeMapper" >
  <resultMap id="BaseResultMap" type="com.system.po.ExamXuanze" >
    <id column="exam_id" property="examId" jdbcType="INTEGER" />
    <result column="exam_name" property="examName" jdbcType="VARCHAR" />
    <result column="answer_A" property="answerA" jdbcType="VARCHAR" />
    <result column="answer_B" property="answerB" jdbcType="VARCHAR" />
    <result column="answer_C" property="answerC" jdbcType="VARCHAR" />
    <result column="answer_D" property="answerD" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    exam_id, exam_name, answer_A, answer_B, answer_C, answer_D, teacher_id, teacher_name, 
    answer, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.system.po.ExamXuanzeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_xuanze
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam_xuanze
    where exam_id = #{examId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam_xuanze
    where exam_id = #{examId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.system.po.ExamXuanzeExample" >
    delete from exam_xuanze
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.system.po.ExamXuanze" >
    insert into exam_xuanze (exam_id, exam_name, answer_A, 
      answer_B, answer_C, answer_D, 
      teacher_id, teacher_name, answer, 
      type)
    values (#{examId,jdbcType=INTEGER}, #{examName,jdbcType=VARCHAR}, #{answerA,jdbcType=VARCHAR}, 
      #{answerB,jdbcType=VARCHAR}, #{answerC,jdbcType=VARCHAR}, #{answerD,jdbcType=VARCHAR}, 
      #{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.system.po.ExamXuanze" >
    insert into exam_xuanze
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examId != null" >
        exam_id,
      </if>
      <if test="examName != null" >
        exam_name,
      </if>
      <if test="answerA != null" >
        answer_A,
      </if>
      <if test="answerB != null" >
        answer_B,
      </if>
      <if test="answerC != null" >
        answer_C,
      </if>
      <if test="answerD != null" >
        answer_D,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examId != null" >
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="examName != null" >
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="answerA != null" >
        #{answerA,jdbcType=VARCHAR},
      </if>
      <if test="answerB != null" >
        #{answerB,jdbcType=VARCHAR},
      </if>
      <if test="answerC != null" >
        #{answerC,jdbcType=VARCHAR},
      </if>
      <if test="answerD != null" >
        #{answerD,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.system.po.ExamXuanzeExample" resultType="java.lang.Integer" >
    select count(*) from exam_xuanze
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam_xuanze
    <set >
      <if test="record.examId != null" >
        exam_id = #{record.examId,jdbcType=INTEGER},
      </if>
      <if test="record.examName != null" >
        exam_name = #{record.examName,jdbcType=VARCHAR},
      </if>
      <if test="record.answerA != null" >
        answer_A = #{record.answerA,jdbcType=VARCHAR},
      </if>
      <if test="record.answerB != null" >
        answer_B = #{record.answerB,jdbcType=VARCHAR},
      </if>
      <if test="record.answerC != null" >
        answer_C = #{record.answerC,jdbcType=VARCHAR},
      </if>
      <if test="record.answerD != null" >
        answer_D = #{record.answerD,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherName != null" >
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam_xuanze
    set exam_id = #{record.examId,jdbcType=INTEGER},
      exam_name = #{record.examName,jdbcType=VARCHAR},
      answer_A = #{record.answerA,jdbcType=VARCHAR},
      answer_B = #{record.answerB,jdbcType=VARCHAR},
      answer_C = #{record.answerC,jdbcType=VARCHAR},
      answer_D = #{record.answerD,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.po.ExamXuanze" >
    update exam_xuanze
    <set >
      <if test="examName != null" >
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="answerA != null" >
        answer_A = #{answerA,jdbcType=VARCHAR},
      </if>
      <if test="answerB != null" >
        answer_B = #{answerB,jdbcType=VARCHAR},
      </if>
      <if test="answerC != null" >
        answer_C = #{answerC,jdbcType=VARCHAR},
      </if>
      <if test="answerD != null" >
        answer_D = #{answerD,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where exam_id = #{examId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.po.ExamXuanze" >
    update exam_xuanze
    set exam_name = #{examName,jdbcType=VARCHAR},
      answer_A = #{answerA,jdbcType=VARCHAR},
      answer_B = #{answerB,jdbcType=VARCHAR},
      answer_C = #{answerC,jdbcType=VARCHAR},
      answer_D = #{answerD,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where exam_id = #{examId,jdbcType=INTEGER}
  </update>
</mapper>